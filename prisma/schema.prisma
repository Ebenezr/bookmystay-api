// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Guest {
  id          Int           @id @default(autoincrement())
  name        String
  phone1      String
  phone2      String?
  gender      Gender
  email       String?
  nationality String
  Reservation Reservation[]
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt

  @@index(fields: [name], type: Hash)
}

model Room {
  id                 Int           @id @default(autoincrement())
  name               String
  code               String
  description        String        @db.Text
  maxChild           Int?          @default(0)
  maxAdult           Int
  maxOccupancy       Int
  availabilityStatus Boolean       @default(true)
  vacant             Boolean       @default(true)
  RoomType           RoomType      @relation(fields: [roomTypeId], references: [id], onDelete: Cascade)
  roomTypeId         Int
  rate               Decimal
  Bed                Bed[]
  Reservation        Reservation[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index(fields: [name], type: Hash)
  @@index([roomTypeId])
}

model RoomType {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  Room      Room[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Bed {
  id        Int      @id @default(autoincrement())
  name      String
  status    Boolean  @default(true)
  size      String
  type      BedType  @default(SINGLE_BED)
  Room      Room     @relation(fields: [roomId], references: [id])
  roomId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Reservation {
  id           Int              @id @default(autoincrement())
  code         String
  status       ResavationStatus
  user         String?
  bookTime     DateTime         @default(now())
  checkIn      DateTime
  checkOut     DateTime
  adultNumber  Int?
  childNumber  Int?
  note         String?          @db.Text
  Room         Room             @relation(fields: [roomId], references: [id])
  roomId       Int
  Guest        Guest            @relation(fields: [guestId], references: [id], onDelete: Cascade)
  guestId      Int
  roomTotal    Decimal?         @default(0)
  serviceTotal Decimal?         @default(0)
  netTotal     Decimal?         @default(0)
  discount     Decimal?         @default(0)
  tax          Decimal?         @default(0)
  taxTotal     Decimal?         @default(0)
  subTotal     Decimal?         @default(0)
  paid         Decimal?         @default(0)
  balance      Decimal?         @default(0)
  createdAt    DateTime         @default(now())
  updatedAt    DateTime         @updatedAt
  Service      Service[]
  Payment      Payment[]

  @@index([guestId])
  @@index([roomId])
}

model Payment {
  id            Int         @id @default(autoincrement())
  accountNumber String
  Reservation   Reservation @relation(fields: [reservationId], references: [id])
  reservationId Int
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
}

model Service {
  id            Int         @id @default(autoincrement())
  type          String
  rate          Decimal
  code          String?
  Reservation   Reservation @relation(fields: [reservationId], references: [id])
  reservationId Int
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
}

model User {
  id           Int        @id @default(autoincrement())
  role         Role       @default(USER)
  name         String
  email        String     @unique
  password     String
  phone        String
  Department   Department @relation(fields: [departmentId], references: [id], onDelete: Cascade)
  departmentId Int
  activeStatus Boolean    @default(true)
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt

  @@index([departmentId])
}

model Department {
  id        Int      @id @default(autoincrement())
  name      String
  User      User[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum BedType {
  TWIN_BED
  DOUBLE_BED
  QUEEN_BED
  KING_BED
  SINGLE_BED
  DOUBLEXL_BED
}

enum Role {
  ADMIN
  USER
}

enum Gender {
  MALE
  FEMALE
}

enum ResavationStatus {
  NEW
  CONFIRMED
  CHECKIN
}
